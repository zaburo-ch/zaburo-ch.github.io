<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>メモ on ZABURO app</title>
    <link>https://zaburo-ch.github.io/categories/%E3%83%A1%E3%83%A2/</link>
    <description>Recent content in メモ on ZABURO app</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Written by ZABURO</copyright>
    <lastBuildDate>Wed, 17 Jun 2015 02:48:23 +0900</lastBuildDate>
    
	<atom:link href="https://zaburo-ch.github.io/categories/%E3%83%A1%E3%83%A2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【C&#43;&#43;】mainなどの関数の中では大きな配列を確保できない</title>
      <link>https://zaburo-ch.github.io/post/20150617_0/</link>
      <pubDate>Wed, 17 Jun 2015 02:48:23 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20150617_0/</guid>
      <description>これがSegmentation faultになるのに対して

これは正しく実行される。

グローバル変数はヒープに取られるのに対して、
ローカル変数はスタックに積まれていく。
スタックのサイズは制限されていることが多く、
(bashならulimit -aで確認できる。8192KBだった)
bool型は1byteなので配列のサイズは10000001/1024≒9765KBとなり
スタックのサイズ制限を超えてしまうので、
メモリリミットより小さいがローカル変数として確保できない。
[参考]
http://homepage2.nifty.com/well/Variable.html
[2015/6/30 追記]
newでもいけるということをコメントで教えて頂きました。
なるほど確かにnewでもヒープに確保されますね。
newでいけるということは中でnew使ってくれてるvectorでもいけます。
 ご指摘ありがとうございました！</description>
    </item>
    
    <item>
      <title>動的時間伸縮法(DTW)をPythonで試してみた</title>
      <link>https://zaburo-ch.github.io/post/20150406_0/</link>
      <pubDate>Mon, 06 Apr 2015 18:36:47 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20150406_0/</guid>
      <description>ここ数ヶ月くらい、ある時系列データを集めていたのですが、
そのデータを扱うにあたってまずデータを分類したいと思い
クラスタリングについて調べたところ
どうやらクラスタリングにはまず距離を定義しなければいけないらしい。
時系列データの距離？は？と思っていたら
このようなページがありました。
動的時間伸縮法 / DTW (Dynamic Time Warping) を可視化する
http://sinhrks.hatenablog.com/entry/2014/11/14/232603
Rの{TSculst}というパッケージを使えば簡単に計算できるそうですが、
有り難い事にDTW距離算出の実装を載せてくれているので
Python用に書き直してみました。

英語力低すぎて英語版Wikipediaがあまり理解できなかったのですが、
dは点同士の距離を定義する関数(初期値は差の絶対値)となる引数で、
windowは、ある点から距離を計算する対象となる点を
windowで指定した範囲に制限する場合の引数であってると思います。
参考にさせて頂いたページにならって
RのデータセットAirPassengersでテストするようにしていますが、
PythonでRのデータセット利用する方法については
以下のページを参照してください。めっちゃ便利です。
PythonでRの標準データセットを使う。
http://kumamotosan.hatenablog.com/entry/2014/03/02/231742</description>
    </item>
    
    <item>
      <title>Xcode6でサンプルコードSonofGrabのビルドができない</title>
      <link>https://zaburo-ch.github.io/post/20150307_0/</link>
      <pubDate>Sat, 07 Mar 2015 21:50:12 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20150307_0/</guid>
      <description>実行中のウィンドウのリストを取得する方法が知りたくて
SonofGrab というサンプルに行き着いたのですが
エラーでちゃいました。
環境は OSX10.9.4 Xcode6.1.1 です。
まず、古いSDKが指定されたままでビルドができないので
Build SettingsからBase SDKを自分のOSにあったものにします。
するとビルドが行われますがそこでもエラーがおきます。
適当にぐぐると以下のページが見つかります。
objective c - Linking error for inline functions - Stack Overflow
http://stackoverflow.com/questions/12844729/linking-error-for-inline-functions
具体的には
Controller.mの71行目のinlineの前にstaticをつけるだけです。</description>
    </item>
    
    <item>
      <title>【python】文字列のバイト数を取得する</title>
      <link>https://zaburo-ch.github.io/post/20150228_0/</link>
      <pubDate>Sat, 28 Feb 2015 16:18:09 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20150228_0/</guid>
      <description>str型の文字列sならlen(s)とするだけでバイト数が取得できます。
てっきり文字数が返ってくるものだと思っていたのでメモ。
ちなみに文字数の取得は len(s.decode(&amp;lsquo;utf-8&amp;rsquo;))
マルチバイト文字が入ってない場合はバイト数＝文字数なのでそのままlen(s)でも可能。</description>
    </item>
    
    <item>
      <title>JQuery mobileでPhonegap(Cordova)アプリをつくる</title>
      <link>https://zaburo-ch.github.io/post/20141218_0/</link>
      <pubDate>Thu, 18 Dec 2014 21:51:43 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20141218_0/</guid>
      <description>cordova4.1.2で動作確認しております。
基本的には普通にJQuery mobile使って書くだけなんですが、
そのままだと、iOS7.0以降の上部のステータスバー的なものと
JQuery mobileのヘッダが重なってしまいます。
そのため、iOS7.0以降でのみヘッダの上にマージンをが設定されるようにします。
.css()とかでやってもpage遷移後に機能しなかったので、
style要素を動的に追加する方法にしたらうまくいきました。
まずwindow.deviceを使うためにpluginを追加します。
$ cordova plugin add org.apache.cordova.device
ソースは以下の通り。</description>
    </item>
    
    <item>
      <title>【matplotlib】図の余白を設定する</title>
      <link>https://zaburo-ch.github.io/post/20141217_0/</link>
      <pubDate>Wed, 17 Dec 2014 17:35:15 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20141217_0/</guid>
      <description>subplots_adjustが何者か調べたのでメモ。
matplotlib(1.4.2)で動作確認しました。
subplots_adjustは図の位置を設定するメソッドです。
これを使う事で余白を変更指定する事が出来ます。たぶん。
http://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure.subplots_adjust
図の大きさを1として、
topとbottomは下から、leftとrightは左からの長さを指定します。
wspaceとhspaceは複数のグラフがまとまっているときの余白とかそんな感じ。
デフォルトの値は下記の通り
left : 0.125
right : 0.9
bottom : 0.1
top : 0.9
wspace : 0.2
hspace : 0.2
以下のサンプルでは、デフォルトのままのグラフと
各値を0.05(5%分)減らしたグラフを表示するようにしました。
 </description>
    </item>
    
    <item>
      <title>Wikipediaでリンクを辿って遊ぶ</title>
      <link>https://zaburo-ch.github.io/post/20141003_0/</link>
      <pubDate>Fri, 03 Oct 2014 18:01:51 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20141003_0/</guid>
      <description>Wikipediaでリンクを辿って遊ぶのがなかなか楽しいです。
Wikipediaのあるページから全く関係のないページに、
記事内のリンクだけを使ってどれだけ早くつけるか競うゲームです。
例えば「リオネル・メッシ」から「貞子3D2」とか。
リンクを辿るごとに目的の記事に近づいたり離れたりが
なんとなくですがわかるので結構楽しいです。
メッシなら「アルゼンチン入った！」とか「サッカーまで来た」とか。
色々なルートがあるのも楽しいです。
ゴールしたらそこからスタートすると辿ってる感がでるし、
負けた方が次のゴール決めたり、
「戻る」禁止にしたりルール次第でかなり面白くなると思います。
こんな感じで遊んでいるうちに
Wikipediaのページ間の距離(?)に興味がわいてきたので、
Page view statistics for Wikimedia projects
http://dumps.wikimedia.org/other/pagecounts-raw/
からデータを頂いてきてpythonでいろいろやってみたので
近いうちに記事にしようと思います。</description>
    </item>
    
    <item>
      <title>【JQuery mobile】ポップアップからポップアップを開く方法</title>
      <link>https://zaburo-ch.github.io/post/20140926_0/</link>
      <pubDate>Fri, 26 Sep 2014 13:42:20 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20140926_0/</guid>
      <description>JQuery mobileのポップアップのボタンなどを押して
更にポップアップを開こうとするとうまく開いてくれません。
おそらく2重にポップアップが開かれないようになっているのだと思います。
仕方が無いので今開いているポップアップを閉じてから
新しくポップアップを開くようにしてみたのですが、
古いポップアップが閉じるのみで新しいポップアップが開きません。
ポップアップが閉じてから新しいポップアップが開けるまで
タイムラグのようなものがあるのかもしれません。
以下のようにして動かしました。
function openPopup(){ closePopup(); var timerId; $(&amp;ldquo;#popup&amp;rdquo;).bind({ popupafteropen:function(event, ui){ clearInterval(timerId); } }); timerId = setInterval(function(){ $(&amp;ldquo;#popup&amp;rdquo;).popup(&amp;lsquo;open&amp;rsquo;); },100); }; function closePopup(){ //開いているポップアップを閉じる処理 } 
ちゃんと開いてくれるまでopenを繰り返して
openされたら繰り返しを止める感じですね！安直！</description>
    </item>
    
    <item>
      <title>OpenCV for Android で特定の色を抽出 (NDK)</title>
      <link>https://zaburo-ch.github.io/post/20140202_1/</link>
      <pubDate>Sun, 02 Feb 2014 22:50:06 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20140202_1/</guid>
      <description>書きました。
・ネイティブメソッドの記述
//色抽出 public static native void colorExtract(long matAddr,int code, int lowH,int highH, int lowS,int highS, int lowV,int highV); ・ネイティブコード
JNIEXPORT void JNICALL Java_com_fc2_blog_zaburoapp_markerdetection_MainActivity_colorExtract (JNIEnv * jenv, jclass, jlong matAddr, jint code, jint lowH, jint highH, jint lowS, jint highS, jint lowV, jint highV){ Mat inputImg; inputImg = (Mat) matAddr; int height = inputImg-&amp;gt;rows; int width = inputImg-&amp;gt;cols; Mat hsvImg = Mat(height,width,CV_8UC3); cvtColor(*inputImg,hsvImg,code); vector singleCh; split(hsvImg,singleCh); Mat h1,h2,h,s1,s2,s,v1,v2,v,hs,mask; if(lowH&amp;lt;=highH){ threshold((Mat)singleCh[0],h1,lowH,255,CV_THRESH_BINARY); threshold((Mat)singleCh[0],h2,highH,255,CV_THRESH_BINARY_INV); bitwise_and(h1,h2,h); }else{ threshold((Mat)singleCh[0],h1,lowH,255,CV_THRESH_BINARY); threshold((Mat)singleCh[0],h2,highH,255,CV_THRESH_BINARY_INV); bitwise_or(h1,h2,h); } if(lowS&amp;lt;=highS){ threshold((Mat)singleCh[1],s1,lowS,255,CV_THRESH_BINARY); threshold((Mat)singleCh[1],s2,highS,255,CV_THRESH_BINARY_INV); bitwise_and(s1,s2,s); }else{ threshold((Mat)singleCh[1],s1,lowS,255,CV_THRESH_BINARY); threshold((Mat)singleCh[1],s2,highS,255,CV_THRESH_BINARY_INV); bitwise_or(s1,s2,s); } if(lowH&amp;lt;=highH){ threshold((Mat)singleCh[2],v1,lowV,255,CV_THRESH_BINARY); threshold((Mat)singleCh[2],v2,highV,255,CV_THRESH_BINARY_INV); bitwise_and(v1,v2,v); }else{ threshold((Mat)singleCh[2],v1,lowV,255,CV_THRESH_BINARY); threshold((Mat)singleCh[2],v2,highV,255,CV_THRESH_BINARY_INV); bitwise_or(v1,v2,v); } bitwise_and(h,s,hs); bitwise_and(hs,v,mask); Mat dstImg = Mat(height,width,inputImg-&amp;gt;type(),Scalar(0,0,0)); inputImg-&amp;gt;copyTo(dstImg,mask); dstImg.</description>
    </item>
    
    <item>
      <title>【Android】BitmapのgetPixels()について</title>
      <link>https://zaburo-ch.github.io/post/20140202_0/</link>
      <pubDate>Sun, 02 Feb 2014 14:09:21 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20140202_0/</guid>
      <description>分かりやすく解説しているページがあったのでメモ
しずくくんのAndroidでゲームプログラミングしてみたいなblog
Bitmap.getPixels()のstride引数の意味がわかった
http://blog.livedoor.jp/shizuku_kun/archives/51385763.html</description>
    </item>
    
    <item>
      <title>【Android】NDK から OpenCV を使うプロジェクトを作る手順</title>
      <link>https://zaburo-ch.github.io/post/20140106_0/</link>
      <pubDate>Mon, 06 Jan 2014 23:37:13 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20140106_0/</guid>
      <description>久しぶりにAndroidでOpenCVを使おうとしたら
書き始めるまでに必要な準備を忘れていたのでメモ。
コメントを書き入れている部分は
「ここにかかなければいけない、というわけではないけど
ここに書いておくのが便利」という部分です
環境 Eclipse 3.7.2
・「プロパティ」→「Android」からOpenCVのライブラリを登録
・OpenCVを使うActivityのメンバに以下を追加し
private BaseLoaderCallback mLoaderCallback = new BaseLoaderCallback(this) { @Override public void onManagerConnected(int status) { switch (status) { case LoaderCallbackInterface.SUCCESS: //ここで後で自分で作成するC/C++でopencvを動かすライブラリをロードしておく System.loadLibrary(&amp;ldquo;my_opencv_method&amp;rdquo;); //ロードが成功した場合にのみボタンを有効にする mButton.setEnabled(true); break; default: super.onManagerConnected(status); break; } } };onResumeを以下のようにオーバーライド
@Override public void onResume() { super.onResume(); //ボタンはロード成功するまでは無効化しておく mButton1.setEnabled(false); OpenCVLoader.initAsync(OpenCVLoader.OPENCV_VERSION_2_4_3, this, mLoaderCallback); }・プロジェクトを右クリック→「Android ツール」→「Add native support」
・プロジェクトを右クリック→「プロパティ」→「C/C++一般」→「パスおよびシンボル」→「インクルード」タブ→「追加」ボタン
で最低でも以下の３つを登録
/opt/OpenCV-2.4.6-android-sdk/sdk/native/jni/include
/opt/android-ndk-r9/sources/cxx-stl/gnu-libstdc++/4.6/include
/opt/android-ndk-r9/sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a/include
(僕は/optに各ライブラリを置いているのでそのへんは適宜修正)
・jniフォルダを作成して、Android.mkとApplication.mkを用意
(他のプロジェクトからコピペして編集)
Android.mk
LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS) #OPENCV_CAMERA_MODULES:=off #OPENCV_INSTALL_MODULES:=off #OPENCV_LIB_TYPE:=SHARED include /opt/OpenCV-2.</description>
    </item>
    
    <item>
      <title>AndroidのSQLiteで部分一致している文字列を検索</title>
      <link>https://zaburo-ch.github.io/post/20131212_0/</link>
      <pubDate>Thu, 12 Dec 2013 16:32:38 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/20131212_0/</guid>
      <description>AndroidでSQLiteを使うようなアプリを作成していて、
「Android SQLite」でぐぐっても
基本的な「検索」「挿入」「更新」「削除」あたりの
ざっくりした方法しか見つけられないので、
補足的な感じで、部分一致している文字列の検索とか
検索条件の詳しい書き方の調べ方をメモっておきます。
どうにも改行が下手です。

【部分一致している文字列の検索】
SQLで言う(SQL分からないけど)「LIKE句」と
ワイルドカードである「%」を使うらしいです。
たとえば、
cursor = mydb.query(&amp;ldquo;my_table&amp;rdquo;, null, &amp;ldquo;name like ?&amp;rdquo;, new String[]{&amp;ldquo;%&amp;rdquo;+ &amp;ldquo;検索対象文字列&amp;rdquo; +&amp;ldquo;%&amp;rdquo;}, null, null, null);ってしてやると、
nameっていうフィールドにある各文字列から
「検索対象文字列」を含む文字列を検索してくれる。
mydbっていうのはSQLiteDatabaseのインスタンスで
my_tableはテーブル名。
【検索条件の詳しい書き方の調べ方】
SQLiteってAndroidに独特なものではないから、
素直に「SQLite」でぐぐる。もしくは「SQL」。
すると
select * from customer where address = &amp;lsquo;東京&amp;rsquo;;って感じの全然文法の違う文がでてくるけど、この検索条件はAndroid版の
cursor = mydb.query(&amp;ldquo;customer&amp;rdquo;, null, &amp;ldquo;address = ?&amp;rdquo;, new String[]{&amp;ldquo;東京&amp;rdquo;}, null, null, null);と大体同じ意味。
というのも、内部での動作なんて調べてないから分からないけど、
たぶん、mydb.queryってしたときAndroid側で
select 第2引数 from 第1引数 where 第3引数と第4引数という文を作ってSQLite側に投げてくれてるってイメージでいいと思います。
（第3引数の?に第4変数で指定した文字列の配列から順に文字列が入ります）
（Cのprintfに近いものを感じた……）
第5引数とかも指定すればgroup by句とかとして文に入ってくるはず。
それがわかってれば、
http://www.dbonline.jp/sqlite/select/
こういうSQLiteの解説サイトを読み替えできるので</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Http on ZABURO app</title>
    <link>https://zaburo-ch.github.io/tags/http/</link>
    <description>Recent content in Http on ZABURO app</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Written by ZABURO</copyright>
    <lastBuildDate>Sat, 12 Sep 2015 00:08:08 +0900</lastBuildDate>
    
	<atom:link href="https://zaburo-ch.github.io/tags/http/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go言語でリダイレクト先のURLを取得する</title>
      <link>https://zaburo-ch.github.io/post/get-redirect-url-in-go/</link>
      <pubDate>Sat, 12 Sep 2015 00:08:08 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/get-redirect-url-in-go/</guid>
      <description>タイトルのとおりGoでリダイレクト先のURLを取得します。
Goでは普通にClientを使ってGETやらHEADリクエストを行うと、
リダイレクトがあったとき自動的にリダイレクト先の内容をとってくるようになっているので、
今回のようにリダイレクト先に行く必要の無い特殊なケースでは、
リダイレクト時の動作を変更するか、より低レベルのメソッドを利用することで対応します。
参考にしたページ
rest - How Can I Make the Go HTTP Client NOT Follow Redirects Automatically? - Stack Overflow
リダイレクト時の動作を変更する Client.CheckRedirect func(req *Request, via []*Request) error
がリダイレクト時の動作を定めているためこれを変更します。
CheckRedirectがerrorを返すと、Clientはリダイレクト先を取得する代わりに
前のレスポンスの内容とそのerror(wrapped in a url.Error)を返します。
 30行目では型アサーションを用いてRedirectAttemptedErrorが起こったかを確認しています。
HEADリクエストの場合もBodyをcloseしなきゃいけないのかはちょっとわかりませんが、
これを見る限りは必要そうなのでcloseしています。
より低レベルのメソッドを利用する http.TransportのRoundTripメソッドを使ってリクエストを行います。
 Transportの設定難しそうだったのでひとまずhttp.DefaultTransport使ってます。
ClientはStatusCodeが301,302,303,307の時にリダイレクトの処理を行うので、
たぶんこの20行目の書き方でも上手く行くはずです。
複数の値のどれかと一致すればtrueみたいな書き方がわからなかったので
愚直に4つ書いて並べてあります。なんかいい方法あるんでしょうか。
Pythonみたいにin演算子とかあればいいんですけどね。</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tensorflow on ZABURO app</title>
    <link>https://zaburo-ch.github.io/tags/tensorflow/</link>
    <description>Recent content in Tensorflow on ZABURO app</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Written by ZABURO</copyright>
    <lastBuildDate>Sat, 17 Dec 2016 17:04:54 +0900</lastBuildDate>
    
	<atom:link href="https://zaburo-ch.github.io/tags/tensorflow/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Style Transfer いろいろ</title>
      <link>https://zaburo-ch.github.io/post/style-transfer/</link>
      <pubDate>Sat, 17 Dec 2016 17:04:54 +0900</pubDate>
      
      <guid>https://zaburo-ch.github.io/post/style-transfer/</guid>
      <description>研究室のゼミでStyle Transferに関して論文紹介を行った際に使用したスライドを
少し修正してslide shareにアップロードしました．
  Style transfer  from zaburo 
TensorFlowの練習も兼ねて実装してみたので
この記事では，実装するときに悩んだところなどついていくつか取り上げたいと思います．
下記の実装を参考にさせていただきました．
https://github.com/cysmith/neural-style-tf
https://github.com/tensorflow/magenta/tree/master/magenta/models/image_stylization
まずはスライド中でGatys et al. 2016aとして紹介している
もっとも基本的なStyle Transferを実装します．コードはこちら．
基本的には論文の式を実装するだけですが
コンテンツの損失の式がピクセル数で割るような形になっていないのに
論文に入力画像のサイズが書いていないので(見逃しているだけ？)，
論文のalphaとbetaの比をそのままつかってもうまくいきませんでした．
そこでJohnson et al. 2016に書かれている式を使うことにしました．
具体的にはコンテンツの損失で二乗和をとっているところを二乗平均にしました．
ついでに，スタイルの損失についてもJohnson et al. 2016に従って修正します．
ここはGram matrixをheight * widthで割って二乗平均をとる形にしました．
(Gram matrixをchannel * height * widthで割るのと等価なはずです)
VGGについてはTensorFlow-Slimを使ってサクッと書きました．
基本はslimの下にあるvgg_16から全結合層を除いたものになっています．
endpointはそのままだとkeyがvgg_16/convN/convN_Mのような形になるので，
使いやすいようにkeyを変更して使っています．
slimを使うと数行でVGG16が実装できるので非常に便利でした．
また，損失の定義する方法としては，コンテンツ・スタイル画像をテンソルとして別々に定義し
最適化の際にそれらをVGGに入力した値などを計算させるような方法も考えられますが，
損失を定義する段階でコンテンツ・スタイル画像を入力した場合の計算しておき，
それを定数として扱った方が高速に動作したのでそのように書きました．
次にGatys et al. 2016bで提案された色を保存したままStyle Transferを行う手法の1つである
Luminance-only Transferを実装します．コードはこちら
これは英語版WikipediaのYIQの記事にYIQとRGBの相互変換が載っているので
これを実装すればほとんどおしまいです．
あとは，RGB -&amp;gt; YIQ -&amp;gt; YチャンネルはそのままでIQチャンネルを全て0にしたもの -&amp;gt; RGB</description>
    </item>
    
  </channel>
</rss>